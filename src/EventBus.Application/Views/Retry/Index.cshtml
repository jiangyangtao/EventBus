@{
    Layout = "_Layout";
    ViewData["Title"] = "RetryQueue";
}

<div class="main-container" id="app" style="max-width:60%;">
    <main role="main" class="pb-3">

        <div class="placeholder-block"></div>

        <form class="row gx-3 gy-2 align-items-center">
            <div class="col-sm-3">
                <label for="eventName">事件名：</label>
                <input type="text" class="form-control" v-model="eventName" placeholder="请输入事件名">
            </div>
            <div class="col-sm-3">
                <label for="eventName">订阅名：</label>
                <input type="text" class="form-control" v-model="endpointName" placeholder="请输入订阅名">
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-primary" v-on:click="getRetryList()">查询</button>
            </div>
        </form>

        <div class="retry-record-container">

            <div class="card retry-item mb-3 border-secondary" v-for="(item,index) in retryList">

                <div class="card-header">
                    <div class="row">
                        <div class="col-6 text-center card-header-left" style="">事件信息</div>
                        <div class="col-6 text-center card-header-right">订阅信息</div>
                    </div>
                </div>

                <div class="card-body text-secondary">
                    <div class="row">

                        <div class="col-6 card-body-left">

                            <div class="d-flex w-100 justify-content-between item-header">
                                <h5 class="mb-1">{{item.EventName}}</h5>
                                <small>{{item.EventRecord.RecordTime}}</small>
                            </div>

                            <div class="record-item">IPAddress:&nbsp;<small class="text-muted">{{item.EventRecord.ClientIPAddress}}</small></div>
                            <div class="record-item">QueryString:&nbsp;<small class="text-muted">{{item.EventRecord.QueryString}}</small></div>
                            <div class="record-item">
                                Header:
                                <div v-for="(value,key,index) in item.EventRecord.Header" class="header-item">
                                    <small class="text-muted">{{key}}: {{value}}</small>
                                </div>
                            </div>
                            <div class="record-item">Data:<small class="text-muted">{{item.EventRecord.Data}}</small></div>
                            <div class="record-item">订阅完成率:&nbsp;<small class="text-muted">{{item.EventRecord.SubscriptionCompletionRate}}&nbsp;%</small></div>

                        </div>

                        <div class="col-6 card-body-right">

                            <div class="d-flex w-100 justify-content-between item-header">
                                <h5 class="mb-1">{{item.EventRecordSubscription.EndpointName}}</h5>
                                <small>{{item.RetryTime}}</small>
                            </div>

                            <div class="record-item">Url:&nbsp;<small class="text-muted">{{item.EventRecordSubscription.EndpointUrl}}</small></div>
                            <div class="record-item">订阅类型:&nbsp;<small class="text-muted">{{item.EventRecordSubscription.SubscriptionProtocol}}</small></div>
                            <div class="record-item">
                                重试策略:
                                <div v-for="(policyItem,policyIndex) in item.EventRecordSubscription.FailedRetryPolicy" class="header-item">
                                    <small class="text-muted">
                                        第<span>{{policyIndex+1}}</span>次：<span>{{getBehavior(policyItem.Behavior)}}</span>，<span>{{policyItem.RetryDelayCount}}</span><span>{{getDelayUnit(policyItem.RetryDelayUnit)}}</span>
                                    </small>
                                </div>
                            </div>
                            <div class="record-item">
                                <button type="button" class="btn btn-light" v-on:click="retry(item)">立即重试</button>
                                <button type="button" class="btn btn-light" v-on:click="remove(item)">从队列中移除</button>
                            </div>

                        </div>
                    </div>

                </div>

            </div>

        </div>

        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Previous" v-on:click="nextPage()">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li class="page-item" v-for="(item,index) in pageNumbers">
                    <a class="page-link" href="#" v-on:click="skipPage(index)">{{index+1}}</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Next" v-on:click="previousPage()">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>

    </main>
</div>


<script type="text/javascript" charset="utf-8">
    var app = new Vue({
        el: '#app',
        data: {
            eventName: "",
            endpointName: "",
            retryList: [],
            currnetPageIndex: 1,
            pageCount: 20,
            pageNumbers: new Array(1),
        },
        beforeCreate() {
            this.eventName = "";
            this.endpointName = "";
        },
        mounted() {
            this.getRetryList();
        },
        methods: {
            getRetryList() {
                var startIndex = (this.currnetPageIndex - 1) * this.pageCount;
                api.retry.list(startIndex, this.pageCount, this.eventName, this.endpointName)
                    .success(r => {
                        this.retryList = r.List;
                        this.pageNumber(r.TotalCount);
                    }).fail(e => {
                        console.log(e);
                        message.error(e.message);
                    });
            },
            skipPage(index) {
                this.currnetPageIndex = index + 1;
                this.getRetryList();
            },
            nextPage() {
                if (this.currnetPageIndex > 1) {
                    this.currnetPageIndex -= 1;
                    this.getRetryList();
                }
            },
            previousPage() {
                if (this.currnetPageIndex < this.pageNumbers.length) {
                    this.currnetPageIndex += 1;
                    this.getRetryList();
                }
            },
            pageNumber(totalCount) {
                var pageCount = 1;
                if (totalCount > 0) {
                    var pageCount = Math.ceil(totalCount / this.pageCount);
                }

                this.pageNumbers = new Array(pageCount);
            },
            getBehavior(behavior) {
                if (behavior == "Retry") return "重试";
                if (behavior == "Discard") return "丢弃";

                return behavior;
            },
            getDelayUnit(delayUnit) {
                if (delayUnit == "Second") return "秒";
                if (delayUnit == "Minute") return "分";
                if (delayUnit == "Hour") return "小时";
                if (delayUnit == "Day") return "天";

                return delayUnit;
            },
            retry(data) {
                api.retry.retry(data.RetryDataId)
                    .success(r => {
                        this.getRetryList();
                        message.success("重试成功");
                    }).fail(e => {
                        console.log(e);
                        message.error(e.message);
                    });
            },
            remove(data) {
                modal.confirm(() => {
                    api.retry.delete(data.RetryDataId)
                        .success(r => {
                            this.getRetryList();
                            message.success("移除成功");
                        }).fail(e => {
                            console.log(e);
                            message.error(e.message);
                        });
                });
            }
        }
    });
</script>